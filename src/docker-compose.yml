version: "3"

services:
  flask:
    build: .
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5000 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
#    restart: unless-stopped
    ports:
      - "5000:5000"
    user: "1000:1000"
    volumes:
      - ./project:/app:z
    command: python main.py
    depends_on:
      - postgres
    container_name: flask
    networks:
      network:
        ipv4_address: 172.168.0.3

  postgres:
    image: 'postgres:alpine3.17'
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - ./dump:/docker-entrypoint-initdb.d:z
    ports:
      - "5432:5432"
    container_name: postgres
    networks:
      network:
        ipv4_address: 172.168.0.8

  pgadmin:
    image: 'dpage/pgadmin4:6.20'
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:8432 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    ports:
      - "8432:80"
    depends_on:
      - postgres
    container_name: pgadmin
    networks:
      network:
        ipv4_address: 172.168.0.2

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.168.0.0/16
          gateway: 172.168.0.1
