Необходимо реализовать web-приложение для проекта SQL2

Общие требования
+Программа должна быть разработана на языке Python
+Код программы должен находиться в папке src
При написании кода необходимо придерживаться Google Style
+Необходимо разработать Web-приложение
+Программа должна быть реализована с использованием любого MVC-фреймворка (Django, flask)
+Программа должна быть реализована с использованием паттерна MVC, а также:
не должно быть кода бизнес-логики в коде представлений;
не должно быть кода интерфейса в контроллере и в модели;
контроллеры должны быть тонкими;
+Рендеринг страниц осуществлять на стороне сервера (использование технологии Server-Side Rendering)
Вам необходимо полностью переиспользовать базу данных из проекта SQL2, включив её в компонент Model
+В качестве референса по дизайну вы можете использовать бренд-бук Школы или визуальный стиль платформы (см. materials)
+Дизайн приложения должен быть интуитивно-понятным

Требования к содержанию
Главная страница должна содержать:

+Навигационное меню, обеспечивающее переход к основным разделам приложения: «Данные» и «Операции»
-Поле «О себе», содержащее основную информацию о студенте, выполнившем проект

Графическая оболочка страниц «Данные» и «Операции» должна содержать следующие разделы:

+-Шапка, по нажатию на которую можно осуществить переход на главную страницу
+Навигационное меню, позволяющее осуществить переход по основным разделам
+Основную часть раздела: содержательный информационный текст, иллюстрации и т.п
-Навигационная панель, осуществляющая передвижение по подразделам выбранного раздела (в случае необходимости)

Раздел «Данные» должен содержать подразделы, которые позволяют через GUI поддерживать следующий функционал:

Совершать CRUD-операции по всем таблицам
При любой модификации таблиц (create, update, delete) приложение должно запрашивать у пользователя подтверждение на осуществление операции
После любого вида модификации таблиц пользователю должна выводиться измененная таблица
Импорт и экспорт данных для каждой таблицы из файлов/в файлы с расширением .csv

Раздел «Операции» должен содержать компоненты:

Блок, содержащий все возможные для вызова запросы из проекта SQL2, наименование/краткое описание сути запроса
Блок с возможностью самостоятельного ввода SQL-запроса пользователем

Раздел «Операции» должен содержать подразделы, которые позволяют через GUI поддерживать следующий функционал:

Выбор желаемой процедуры / функции / запроса из разработанных в проекте SQL2 с выводом результата и возможность экспорта результата в файл разрешения .csv
В случае необходимости введения параметров для выполнения процедуры или функции, графический интерфейс должен предоставлять форму для ввода данных
Если введенные аргументы/SQL-запрос были некорректны, то приложение должно обрабатывать подобную ситуацию (выдавать ошибку о некорректности введенных и данных и предлагать повторную попытку ввода)
При осуществлении процедур / функций / запросов необходимо вызывать оригинальные хранимые операции, описанные в базе данных на языке SQL
Конфигурация приложения должна осуществляться при помощи файла конфигурации, который включает в себя строку подключения к СУБД.

Part 2. Логирование

Необходимо реализовать логирование всех действий пользователя (файлы логов записывать в папку logs). Каждый день создается новый файл логов. Название файлов должно соответствовать шаблону logs_dd-MM-yy-hh-mm-ss

У каждой записи должен быть обозначен ее уровень важности:

Info: ожидаемое событие;
Warning: неожиданные события, которые позволяют продолжить работу приложения;
Error: событие, которое не позволяет дальнейшую работу программы;


Part 3. Дополнительно. Развертывание приложения

Подготовить приложение к запуску. Для этого необходимо упаковать в docker-контейнеры:

+базу данных
проксирующий сервер (использовать nginx)
+web приложение
+-Подготовить docker-compose для запуска всего приложения. При этом "наружу" должен смотреть только docker-контейнер, содержащий Nginx.